#include <stdio.h>
#include <ctype.h>

#define SIZE 50
char stack[SIZE];
int top = -1;

void push(char c) { stack[++top] = c; }
char pop() { return stack[top--]; }
int precedence(char c) {
    if(c=='^') return 3;
    if(c=='*'||c=='/'||c=='%') return 2;
    if(c=='+'||c=='-') return 1;
    return 0;
}

void infixToPostfix(char infix[]) {
    char postfix[SIZE], ch;
    int i=0, k=0;
    while((ch=infix[i++])!='\0') {
        if(isalnum(ch)) postfix[k++] = ch;
        else if(ch=='(') push(ch);
        else if(ch==')') {
            while(stack[top]!='(') postfix[k++] = pop();
            pop(); // remove '('
        } else {
            while(top!=-1 && precedence(stack[top])>=precedence(ch))
                postfix[k++] = pop();
            push(ch);
        }
    }
    while(top!=-1) postfix[k++] = pop();
    postfix[k] = '\0';
    printf("Postfix: %s\n", postfix);
}

int main() {
    char exp[SIZE];
    printf("Enter infix expression: ");
    scanf("%s", exp);
    infixToPostfix(exp);
    return 0;
}
